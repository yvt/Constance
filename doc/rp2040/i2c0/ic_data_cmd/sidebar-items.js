initSidebarItems({"enum":[["CMD_A","This bit controls whether a read or a write is performed. This bit does not control the direction when the DW_apb_i2con acts as a slave. It controls only the direction when it acts as a master.\\n\\n When a command is entered in the TX FIFO, this bit distinguishes the write and read commands. In slave-receiver mode, this bit is a ‘don’t care’ because writes to this register are not required. In slave-transmitter mode, a ‘0’ indicates that the data in IC_DATA_CMD is to be transmitted.\\n\\n When programming this bit, you should remember the following: attempting to perform a read operation after a General Call command has been sent results in a TX_ABRT interrupt (bit 6 of the IC_RAW_INTR_STAT register), unless bit 11 (SPECIAL) in the IC_TAR register has been cleared. If a ‘1’ is written to this bit after receiving a RD_REQ interrupt, then a TX_ABRT interrupt occurs.\\n\\n Reset value: 0x0"],["FIRST_DATA_BYTE_A","Indicates the first data byte received after the address phase for receive transfer in Master receiver or Slave receiver mode.\\n\\n Reset value : 0x0\\n\\n NOTE: In case of APB_DATA_WIDTH=8,\\n\\n 1. The user has to perform two APB Reads to IC_DATA_CMD in order to get status on 11 bit.\\n\\n 2. In order to read the 11 bit, the user has to perform the first data byte read [7:0] (offset 0x10) and then perform the second read [15:8] (offset 0x11) in order to know the status of 11 bit (whether the data received in previous read is a first data byte or not).\\n\\n 3. The 11th bit is an optional read field, user can ignore 2nd byte read [15:8] (offset 0x11) if not interested in FIRST_DATA_BYTE status."],["RESTART_A","This bit controls whether a RESTART is issued before the byte is sent or received.\\n\\n 1 - If IC_RESTART_EN is 1, a RESTART is issued before the data is sent/received (according to the value of CMD), regardless of whether or not the transfer direction is changing from the previous command; if IC_RESTART_EN is 0, a STOP followed by a START is issued instead.\\n\\n 0 - If IC_RESTART_EN is 1, a RESTART is issued only if the transfer direction is changing from the previous command; if IC_RESTART_EN is 0, a STOP followed by a START is issued instead.\\n\\n Reset value: 0x0"],["STOP_A","This bit controls whether a STOP is issued after the byte is sent or received.\\n\\n - 1 - STOP is issued after this byte, regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master immediately tries to start a new transfer by issuing a START and arbitrating for the bus. - 0 - STOP is not issued after this byte, regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master continues the current transfer by sending/receiving data bytes according to the value of the CMD bit. If the Tx FIFO is empty, the master holds the SCL line low and stalls the bus until a new command is available in the Tx FIFO. Reset value: 0x0"]],"struct":[["CMD_W","Write proxy for field `CMD`"],["DAT_W","Write proxy for field `DAT`"],["RESTART_W","Write proxy for field `RESTART`"],["STOP_W","Write proxy for field `STOP`"]],"type":[["CMD_R","Reader of field `CMD`"],["DAT_R","Reader of field `DAT`"],["FIRST_DATA_BYTE_R","Reader of field `FIRST_DATA_BYTE`"],["R","Reader of register IC_DATA_CMD"],["RESTART_R","Reader of field `RESTART`"],["STOP_R","Reader of field `STOP`"],["W","Writer for register IC_DATA_CMD"]]});