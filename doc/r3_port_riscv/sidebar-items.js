initSidebarItems({"constant":[["INTERRUPT_EXTERNAL","The interrupt number for external interrupts."],["INTERRUPT_PLATFORM_START","The first interrupt numbers allocated for use by an interrupt controller driver."],["INTERRUPT_SOFTWARE","The interrupt number for software interrupts."],["INTERRUPT_TIMER","The interrupt number for timer interrupts."]],"macro":[["use_plic","Implement `InterruptController` and [`Plic`] on the given system type using the Platform-Level Interrupt Controller (PLIC) on the target. Requires [`PlicOptions`]."],["use_port","Define a system type implementing `PortThreading`, `PortInterrupts`, and `EntryPoint`. Requires [`ThreadingOptions`] and `InterruptController`."],["use_rt","Generate entry points using [`::riscv_rt`]. Requires `EntryPoint` to be implemented."],["use_timer","Attach the implementation of `PortTimer` that is based on the RISC-V timer (`mtime`/`mtimecfg`) to a given system type. This macro also implements `Timer` on the system type. Requires [`TimerOptions`]."]],"trait":[["EntryPoint","Defines the entry points of a port instantiation. Implemented by [`use_port!`]."],["InterruptController","An abstract interface to an interrupt controller. Implemented by [`use_plic!`]."],["Plic","Provides access to a system-global PLIC instance. Implemented by [`use_plic!`]."],["PlicOptions","The options for [`use_plic!`]."],["ThreadingOptions","The configuration of the port."],["Timer","An abstract inferface to a port timer driver. Implemented by [`use_timer!`]."],["TimerOptions","The options for [`use_timer!`]."]]});